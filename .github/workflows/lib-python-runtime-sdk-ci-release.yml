# This file is autogenerated by maturin v1.7.0
name: Python Runtime SDK CI + Release

on:
  push:
    branches:
      - main
    tags:
      - 'libs/runtime/sdk/python-*'
    paths: 
      - 'libs/runtime/sdk/python/**'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          working-directory: ./libs/runtime/sdk/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: ./libs/runtime/sdk/python/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: ./libs/runtime/sdk/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: ./libs/runtime/sdk/python/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./libs/runtime/sdk/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: ./libs/runtime/sdk/python/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: ./libs/runtime/sdk/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: ./libs/runtime/sdk/python/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: ./libs/runtime/sdk/python
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: ./libs/runtime/sdk/python/dist

  test:
    name: Test on ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - name: Ubuntu x86_64
            runner: ubuntu-latest
            target: x86_64
          - name: Ubuntu aarch64
            runner: ubuntu-latest
            target: aarch64
          - name: Windows x64
            runner: windows-latest
            target: x64
          - name: macOS x86_64
            runner: macos-13
            target: x86_64
          - name: macOS aarch64
            runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target == 'x64' && 'x64' || 'x86' }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests python-dotenv
        working-directory: ./libs/runtime/sdk/python

      - name: Build and install package
        run: |
          maturin build --release
          pip install .
          cp -r build/lib*/celerity_runtime_sdk/ celerity_runtime_sdk/
        working-directory: ./libs/runtime/sdk/python

      - name: Run tests
        run: |
          python -m pytest -rA tests/ -v
        working-directory: ./libs/runtime/sdk/python
        env:
          GITHUB_ACTIONS: true

      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.platform.name }}
          path: ./libs/runtime/sdk/python/test-server.log

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') && contains(github.ref, 'libs/runtime/sdk/python-')"
    needs: [linux, musllinux, windows, macos, sdist, test]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./libs/runtime/sdk/python
      - name: Extract version from tag
        id: version
        run: |
          # Extract version from tag like 'libs/runtime/sdk/python-v1.2.3'
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#libs/runtime/sdk/python-}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION from tag: $TAG_NAME"
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
          working-directory: ./libs/runtime/sdk/python
