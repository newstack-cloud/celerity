---
source: blueprint-config-parser/tests/blueprint_config_test.rs
expression: blueprint_config
---
{
  "version": "2025-05-12",
  "transform": [
    "celerity-2026-02-28"
  ],
  "variables": {
    "certificateId": {
      "type": "string",
      "description": "The ID of the certificate to use for the API domain."
    },
    "invoiceBucket": {
      "type": "string",
      "description": "The name of the bucket to use for storing invoices."
    },
    "invoiceEventStreamId": {
      "type": "string",
      "description": "The ID of the data stream for invoice events."
    },
    "orderDBStreamId": {
      "type": "string",
      "description": "The ID of the database stream for order data."
    },
    "orderEventsSourceId": {
      "type": "string",
      "description": "The ID of the event source for order events."
    },
    "secretStoreId": {
      "type": "string",
      "description": "The ID of the secret store to use for storing secrets."
    }
  },
  "resources": {
    "getOrderHandler": {
      "type": "celerity/handler",
      "metadata": {
        "displayName": "Get Order Handler",
        "annotations": {
          "celerity.handler.http": true,
          "celerity.handler.http.method": "GET",
          "celerity.handler.http.path": "/orders/{orderId}"
        },
        "labels": {
          "application": "orders"
        }
      },
      "spec": {
        "handlerName": "Orders-GetOrderHandler-v1",
        "codeLocation": "./orders",
        "handler": "handlers.get_order",
        "runtime": "python3.12.x",
        "memory": 1024,
        "timeout": 60,
        "tracingEnabled": true,
        "environmentVariables": {
          "LOG_LEVEL": "INFO",
          "SECRET_STORE_ID": "${variables.secretStoreId}"
        }
      }
    },
    "invoiceEventStreamProcessor": {
      "type": "celerity/handler",
      "metadata": {
        "displayName": "Invoice Event Stream Processor"
      },
      "spec": {
        "handlerName": "Orders-InvoiceEventStreamProcessor-v1",
        "codeLocation": "./orders",
        "handler": "handlers.process_invoice_event_stream",
        "runtime": "python3.12.x",
        "memory": 1024,
        "timeout": 60,
        "tracingEnabled": true,
        "environmentVariables": {
          "LOG_LEVEL": "INFO",
          "SECRET_STORE_ID": "${variables.secretStoreId}"
        },
        "events": {
          "invoiceEventStream": {
            "sourceType": "dataStream",
            "sourceConfiguration": {
              "batchSize": 10,
              "dataStreamId": "${variables.invoiceEventStreamId}",
              "partialFailures": true,
              "startFromBeginning": false
            }
          }
        }
      }
    },
    "invoiceFileEventHandler": {
      "type": "celerity/handler",
      "metadata": {
        "displayName": "Invoice File Event Handler"
      },
      "spec": {
        "handlerName": "Orders-InvoiceFileEventHandler-v1",
        "codeLocation": "./orders",
        "handler": "handlers.invoice_file_event",
        "runtime": "python3.12.x",
        "memory": 1024,
        "timeout": 60,
        "tracingEnabled": true,
        "environmentVariables": {
          "LOG_LEVEL": "INFO",
          "SECRET_STORE_ID": "${variables.secretStoreId}"
        },
        "events": {
          "invoiceFileEvent": {
            "sourceType": "objectStorage",
            "sourceConfiguration": {
              "bucket": "${variables.invoiceBucket}",
              "events": [
                "created",
                "deleted",
                "metadataUpdated"
              ]
            }
          }
        }
      }
    },
    "orderDBStreamProcessor": {
      "type": "celerity/handler",
      "metadata": {
        "displayName": "Order DB Stream Processor"
      },
      "spec": {
        "handlerName": "Orders-OrderDBStreamProcessor-v1",
        "codeLocation": "./orders",
        "handler": "handlers.process_order_db_stream",
        "runtime": "python3.12.x",
        "memory": 1024,
        "timeout": 60,
        "tracingEnabled": true,
        "environmentVariables": {
          "LOG_LEVEL": "INFO",
          "SECRET_STORE_ID": "${variables.secretStoreId}"
        },
        "events": {
          "orderStream": {
            "sourceType": "dbStream",
            "sourceConfiguration": {
              "batchSize": 10,
              "dbStreamId": "${variables.orderDBStreamId}",
              "partialFailures": true,
              "startFromBeginning": false
            }
          }
        }
      }
    },
    "orderEvents": {
      "type": "celerity/consumer",
      "metadata": {
        "displayName": "Order Events Consumer"
      },
      "spec": {
        "sourceId": "${variables.orderEventsSourceId}",
        "batchSize": 10,
        "visibilityTimeout": 30,
        "waitTimeSeconds": 2,
        "partialFailures": true
      },
      "linkSelector": {
        "byLabel": {
          "application": "orders"
        }
      }
    },
    "orderEventsProcessor": {
      "type": "celerity/handler",
      "metadata": {
        "displayName": "Order Events Processor",
        "annotations": {
          "celerity.handler.consumer": true
        },
        "labels": {
          "application": "orders"
        }
      },
      "spec": {
        "handlerName": "Orders-OrderEventsProcessor-v1",
        "codeLocation": "./orders",
        "handler": "handlers.process_order_events",
        "runtime": "python3.12.x",
        "memory": 1024,
        "timeout": 60,
        "tracingEnabled": true,
        "environmentVariables": {
          "LOG_LEVEL": "INFO",
          "SECRET_STORE_ID": "${variables.secretStoreId}"
        }
      }
    },
    "ordersApi": {
      "type": "celerity/api",
      "metadata": {
        "displayName": "Orders API"
      },
      "spec": {
        "protocols": [
          "http"
        ],
        "cors": "*",
        "domain": {
          "domainName": "api.example.com",
          "basePaths": [
            "/"
          ],
          "normalizeBasePath": false,
          "certificateId": "${variables.certificateId}",
          "securityPolicy": "TLS_1_2"
        },
        "auth": {
          "defaultGuard": "jwt",
          "guards": {
            "jwt": {
              "type": "jwt",
              "issuer": "https://identity.twohundred.cloud/oauth2/v1/",
              "tokenSource": "$.headers.Authorization",
              "audience": [
                "https://identity.twohundred.cloud/api/manage/v1/"
              ]
            }
          }
        },
        "tracingEnabled": true
      },
      "linkSelector": {
        "byLabel": {
          "application": "orders"
        }
      }
    }
  }
}
