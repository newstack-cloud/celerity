version: 2025-05-12
transform: celerity-2026-02-28
variables:
  secretStoreId:
    type: string
    description: "The ID of the secret store to use for storing secrets."

  certificateId:
    type: string
    description: "The ID of the certificate to use for the API domain."

  logLevel:
    type: string
    description: "The log level to use for logging."
    default: "INFO"
    allowedValues:
      - "DEBUG"
      - "INFO"
      - "WARNING"
      - "ERROR"

  paymentApiSecret:
    type: string
    description: "The secret to use for authenticating with the API."
    secret: true

resources:
  ordersApi:
    type: "aws/serverless/api"
    description: "The Orders API that provides access to order data."
    metadata:
      displayName: Orders API
    linkSelector:
      byLabel:
        application: "orders"
    spec:
      protocols: ["http"]
      cors:
        allowCredentials: true
        allowOrigins:
          - "https://example.com"
          - "https://another.example.com"
        allowMethods:
          - "GET"
          - "POST"
        allowHeaders:
          - "Content-Type"
          - "Authorization"
        exposeHeaders:
          - "Content-Length"
        maxAge: 3600
      domain:
        domainName: "api.example.com"
        basePaths:
          - "/"
        normalizeBasePath: false
        certificateId: "${variables.certificateId}"
        securityPolicy: "TLS_1_2"
      tracingEnabled: true
      auth:
        defaultGuard: "jwt"
        guards:
          jwt:
            type: jwt
            issuer: "https://identity.newstack.cloud/oauth2/v1/"
            tokenSource: "$.headers.Authorization"
            audience:
              - "https://identity.newstack.cloud/api/manage/v1/"
          customGuard:
            type: custom

  getOrderHandler:
    type: "celerity/handler"
    metadata:
      displayName: Get Order Handler
      labels:
        application: "orders"
      annotations:
        celerity.handler.http: true
        celerity.handler.http.method: "GET"
        celerity.handler.http.path: "/orders/{orderId}"
    spec:
      handlerName: Orders-GetOrderHandler-v1
      codeLocation: "./orders"
      handler: "handlers.get_order"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "${variables.logLevel}"
        SECRET_STORE_ID: "${variables.secretStoreId}"
        PAYMENT_API_SECRET: "${variables.paymentApiSecret}"
