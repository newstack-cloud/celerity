version: 2025-05-12
transform: celerity-2026-02-28
variables:
  secretStoreId:
    type: string
    description: "The ID of the secret store to use for storing secrets."

  certificateId:
    type: string
    description: "The ID of the certificate to use for the API domain."

  orderEventsSourceId:
    type: string
    description: "The ID of the event source for order events."

  invoiceBucket:
    type: string
    description: "The name of the bucket to use for storing invoices."

  orderDBStreamId:
    type: string
    description: "The ID of the database stream for order data."

  invoiceEventStreamId:
    type: string
    description: "The ID of the data stream for invoice events."

resources:
  ordersApi:
    type: "celerity/api"
    metadata:
      displayName: Orders API
    linkSelector:
      byLabel:
        application: "orders"
    spec:
      protocols: ["http"]
      cors: "*"
      domain:
        domainName: "api.example.com"
        basePaths:
          - "/"
        normalizeBasePath: false
        certificateId: "${variables.certificateId}"
        securityPolicy: "TLS_1_2"
      tracingEnabled: true
      auth:
        defaultGuard: "jwt"
        guards:
          jwt:
            type: jwt
            issuer: "https://identity.twohundred.cloud/oauth2/v1/"
            tokenSource: "$.headers.Authorization"
            audience:
              - "https://identity.twohundred.cloud/api/manage/v1/"

  getOrderHandler:
    type: "celerity/handler"
    metadata:
      displayName: Get Order Handler
      labels:
        application: "orders"
      annotations:
        celerity.handler.http: true
        celerity.handler.http.method: "GET"
        celerity.handler.http.path: "/orders/{orderId}"
    spec:
      handlerName: Orders-GetOrderHandler-v1
      codeLocation: "./orders"
      handler: "handlers.get_order"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "INFO"
        SECRET_STORE_ID: "${variables.secretStoreId}"

  orderEvents:
    type: "celerity/consumer"
    metadata:
      displayName: Order Events Consumer
    linkSelector:
      byLabel:
        application: "orders"
    spec:
      sourceId: "${variables.orderEventsSourceId}"
      batchSize: 10
      visibilityTimeout: 30
      waitTimeSeconds: 2
      partialFailures: true

  orderEventsProcessor:
    type: "celerity/handler"
    metadata:
      displayName: Order Events Processor
      labels:
        application: "orders"
      annotations:
        celerity.handler.consumer: true
    spec:
      handlerName: Orders-OrderEventsProcessor-v1
      codeLocation: "./orders"
      handler: "handlers.process_order_events"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "INFO"
        SECRET_STORE_ID: "${variables.secretStoreId}"

  invoiceFileEventHandler:
    type: "celerity/handler"
    metadata:
      displayName: Invoice File Event Handler
    spec:
      handlerName: Orders-InvoiceFileEventHandler-v1
      codeLocation: "./orders"
      handler: "handlers.invoice_file_event"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "INFO"
        SECRET_STORE_ID: "${variables.secretStoreId}"
      events:
        invoiceFileEvent:
          sourceType: "objectStorage"
          sourceConfiguration:
            events:
              - created
              - deleted
              - metadataUpdated
            bucket: "${variables.invoiceBucket}"

  orderDBStreamProcessor:
    type: "celerity/handler"
    metadata:
      displayName: Order DB Stream Processor
    spec:
      handlerName: Orders-OrderDBStreamProcessor-v1
      codeLocation: "./orders"
      handler: "handlers.process_order_db_stream"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "INFO"
        SECRET_STORE_ID: "${variables.secretStoreId}"
      events:
        orderStream:
          sourceType: "dbStream"
          sourceConfiguration:
            dbStreamId: "${variables.orderDBStreamId}"
            batchSize: 10
            partialFailures: true
            startFromBeginning: false

  invoiceEventStreamProcessor:
    type: "celerity/handler"
    metadata:
      displayName: Invoice Event Stream Processor
    spec:
      handlerName: Orders-InvoiceEventStreamProcessor-v1
      codeLocation: "./orders"
      handler: "handlers.process_invoice_event_stream"
      runtime: "python3.12.x"
      memory: 1024
      timeout: 60
      tracingEnabled: true
      environmentVariables:
        LOG_LEVEL: "INFO"
        SECRET_STORE_ID: "${variables.secretStoreId}"
      events:
        invoiceEventStream:
          sourceType: "dataStream"
          sourceConfiguration:
            dataStreamId: "${variables.invoiceEventStreamId}"
            batchSize: 10
            partialFailures: true
            startFromBeginning: false
