/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface CoreRuntimeConfig {
  blueprintConfigPath: string
  serverPort: number
  serverLoopbackOnly?: boolean
}
export interface CoreRuntimeAppConfig {
  api?: CoreApiConfig
}
export interface CoreApiConfig {
  http?: CoreHttpConfig
  websocket?: CoreWebsocketConfig
}
export interface CoreHttpConfig {
  handlers: Array<CoreHttpHandlerDefinition>
}
export interface CoreWebsocketConfig {
  
}
export interface CoreHttpHandlerDefinition {
  path: string
  method: string
  location: string
  handler: string
}
export interface Response {
  status: number
  headers?: Record<string, string>
  body?: string
}
export type JsRequestWrapper = Request
export declare class Request {
  /**
   * Allows the creation of requests, primarily for test purposes.
   * In normal circumstances, the request will be created by
   * the runtime and passed to the handler.
   */
  constructor(method: string, uri: string, headers: Record<string, string>)
  /** The HTTP version used for the request. */
  httpVersion(): string
  /** The HTTP method of the request. */
  method(): string
  /** The URI of the request. */
  uri(): string
  /** The headers of the request. */
  headers(): Record<string, string>
  /** The body of the request, either as a string or `null` if the body is empty. */
  body(): Promise<string | null>
}
export declare class CoreRuntimeApplication {
  constructor(runtimeConfig: CoreRuntimeConfig)
  setup(): CoreRuntimeAppConfig
  registerHttpHandler(path: string, method: string, handler: (err: Error | null, request: Request) => Promise<Response>): void
  run(block: boolean): Promise<void>
  shutdown(): void
}
